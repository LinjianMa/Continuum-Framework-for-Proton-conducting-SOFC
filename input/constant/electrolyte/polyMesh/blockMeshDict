/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0 0.2006 0)         //0
    (40 0.2006 0)        //1
    (0 0.2009 0)         //2
    (40 0.2009 0)        //3
    (0 250.2009 0)       //4
    (40 250.2009 0)      //5
    (0 500.2009 0)       //6
    (40 500.2009 0)      //7
    (0 500.2012 0)       //8
    (40 500.2012 0)      //9
    
    (0 0.2006 0.1)         //10
    (40 0.2006 0.1)        //11
    (0 0.2009 0.1)         //12
    (40 0.2009 0.1)        //13
    (0 250.2009 0.1)       //14
    (40 250.2009 0.1)      //15
    (0 500.2009 0.1)       //16
    (40 500.2009 0.1)      //17
    (0 500.2012 0.1)       //18
    (40 500.2012 0.1)      //19
);

blocks
(
    hex (0 1 3 2 10 11 13 12) (1 100 1) simpleGrading (1 1 1)  // BZY interface
    hex (2 3 5 4 12 13 15 14) (1 10000 1) simpleGrading (1 200000 1)  // BZY 1
    hex (4 5 7 6 14 15 17 16) (1 10000 1) simpleGrading (1 0.000005 1)  // BZY 2
    hex (6 7 9 8 16 17 19 18) (1 100 1) simpleGrading (1 1 1)  // BZY interface
);

edges
(
);

boundary
(
    upface
    {
        type patch;
        faces
        (
            (8 9 19 18)
        );
    }

    downface
    {
	type patch;
	faces
	(
	    (0 1 11 10)
	);
    }

    fixedWalls
    {
        type wall;
        faces
        (
	    (0 2 12 10)
            (2 4 14 12)
            (4 6 16 14)
            (6 8 18 16)
	    (1 3 13 11)
	    (3 5 15 13)
	    (5 7 17 15)
	    (7 9 19 17)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
	    (0 1 3 2)
            (2 3 5 4)
            (4 5 7 6)
            (6 7 9 8)
	    (10 11 13 12)
	    (12 13 15 14)
	    (14 15 17 16)
	    (16 17 19 18)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
